#+TITLE: Dotfiles Configuration

Shell and CLI Tooling configuration

* git

  Git Configuration

** .gitconfig

*** Author

  Configure information used by git to determine how to write the
  author information for commits

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [user]
      name = Aaron Kuehler
      email = aaron.kuehler@gmail.com
  #+END_SRC


*** Core configuration

  In addition to any files included in a project's =.gitignore= file,
  also include those listed in the =~/.gitconfig.=

  Use Emacs as the commit editor

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [core]
      excludesfile = ~/.gitignore
      editor = emacs -nw --eval '(global-git-commit-mode t)'
  #+END_SRC


*** Colors

  Enable coloring of git output

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [color]
      ui = true
  #+END_SRC


*** Aliases

  Set aliases for frequently used git incantations.

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [alias]
      co  = checkout
      cb  = checkout -b
      db  = branch -d
      rclone = clone --recursive
  #+END_SRC


*** Clean

  Disable the safeguard flag when running =git clean=

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [clean]
      requireForce = false
  #+END_SRC


*** Push

  Only push the current branch, rather than all
  branches, when =git push= is invoked.

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [push]
      default = simple
  #+END_SRC


*** Filter

  #+BEGIN_SRC conf :tangle ~/.gitconfig
    [filter "lfs"]
      clean = git-lfs clean %f
      smudge = git-lfs smudge %f
      required = true
  #+END_SRC


** .gitignore

*** Mac OS Finder cache

  Never ever store Mac OS Finder metadata in a git repository.

  #+BEGIN_SRC txt :tangle ~/.gitignore
    .DS_Store
  #+END_SRC

*** Emacs temp files

  Never store Emacs autosave and backup files in a git repository.

  #+BEGIN_SRC text
    ,*~
    .#*
    ,*#
  #+END_SRC


** tab completion

  Enable tab completion for the git.

  #+BEGIN_SRC sh :tangle ~/.bashrc
    GIT_TAB_COMPLETION_FILE=/usr/local/etc/bash_completion.d/git-completion.bash
    if [ -f $GIT_TAB_COMPLETION_FILE ];
       then source $GIT_TAB_COMPLETION_FILE
    fi
  #+END_SRC


* gem

  Ruby gems configuration

** Documentation

  When a gem is installed forego the generation of its documentation.

  #+BEGIN_SRC text :tangle ~/.gemrc
    gem: --no-document
  #+END_SRC


* Rspec

  rspec CLI configuration

** Color

  Enable colorized output

  #+BEGIN_SRC text :tangle ~/.rspec
    --color
  #+END_SRC


** Output format

  Output from spec runs should look like a progress bar

  #+BEGIN_SRC text :tangle ~/.rspec
    --format progress
  #+END_SRC


** Ordering

  Always run specs in a random order to ensure that examples are
  independent of one another.

  #+BEGIN_SRC text :tangle ~/.rspec
    --order random
  #+END_SRC
